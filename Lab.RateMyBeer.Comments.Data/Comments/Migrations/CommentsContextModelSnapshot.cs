// <auto-generated />
using System;
using Lab.RateMyBeer.Comments.Data.Comments;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab.RateMyBeer.Comments.Data.Comments.Migrations
{
    [DbContext(typeof(CommentsContext))]
    partial class CommentsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Lab.RateMyBeer.Comments.Data.Comments.CommentData", b =>
                {
                    b.Property<Guid>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CommentsDataCommentsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CommentId");

                    b.HasIndex("CommentsDataCommentsId");

                    b.ToTable("CommentsCommentEntries", (string)null);
                });

            modelBuilder.Entity("Lab.RateMyBeer.Comments.Data.Comments.CommentsData", b =>
                {
                    b.Property<Guid>("CommentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CheckinId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CommentsId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Lab.RateMyBeer.Comments.Data.Comments.CommentData", b =>
                {
                    b.HasOne("Lab.RateMyBeer.Comments.Data.Comments.CommentsData", null)
                        .WithMany("Comments")
                        .HasForeignKey("CommentsDataCommentsId");
                });

            modelBuilder.Entity("Lab.RateMyBeer.Comments.Data.Comments.CommentsData", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
